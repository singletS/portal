# lessons/calibration-of-glassware.yml
# 
# STARTER TEMPLATE FOR ACT-CMS LESSON PORTAL SUBMISSION
# Replace all placeholder text with your actual lesson information
# Remove any sections that don't apply to your lesson

# BASIC METADATA (REQUIRED)
# Use a clear, descriptive title that includes the main topic
title: "Calibration of Glassware"

# Brief description for search results (1-2 sentences)
description: "Data analysis for a Calibration of Glassware Experiment in Analytical Chemistry Laboratory."

# Longer description for the lesson page (use | for multi-line text)
expanded_description: |
  This lesson can be used to analyze glassware calibration data collected by students in an analytical chemistry laboratory.
  The suggested context would be to walk through it together during the second week of Analytical Laboratory.
  About a half hour to an hour should be allocated in lab to this lesson.

# COURSE INFORMATION (REQUIRED)
# Choose ONE: "None", "Beginner", "Intermediate", "Advanced"
programming_skill: "None"
# None: No programming experience. 
# Beginner: Knows variables, conditionals, loops
# Intermediate: Can write their own scripts from scratch
# Advanced: Can write/develop software.

# Examples: "Foundational Module", "Physical Chemistry", "Organic Chemistry", 
# "Inorganic Chemistry", "Analytical Chemistry", "Biochemistry", "Materials Science", "Other"
primary_course: "Analytical Chemistry"

# List other courses where this lesson could be used (optional)
also_for:
  - "General Chemistry"
  - "Physical Chemistry"

# List all authors
authors: 
  - "Dr. Christine Morales"

# Estimated total time for all materials
estimated_time: "1 hour or less"

# Write a description of your module.
# Single notebook, multi-part module, etc?
format: "Single Notebook"

# INSTRUCTOR INFORMATION (OPTIONAL)
# Contact email for instructor access requests (optional - will use default if not specified)
instructor_email: "moralech@mountunion.edu"
# Note: Instructor materials will be located at: instructor-repo/{lesson-filename}/
# where {lesson-filename} matches this YAML file's name

# INSTRUCTOR DETAILS (OPTIONAL)
# What level of students was this piloted with?
student_level: "Undergraduate - Second Year"  # e.g., "Graduate", "Undergraduate - First Year", "Mixed Graduate/Undergraduate"
# How many students has this been tested with?
students_piloted: 10  # Number of students
# Free-form notes for instructors
instructor_notes: |
  This introductory module works well as a second programming lesson for students with no coding experience.

  Teaching tips:
  - If your students have already done Basic Tasks and you have time, consider providing less sample code for data entry in Tasks 1 and 3.  
  - If you do not provide sample code for data entry in Tasks 1 and 3, consider prompting students to copy Numpy array data entry syntax from Basic Tasks.
  - In Task 2, the detailed formatting settings for the graph are intended to demonstrate creation of publication-quality figures, 
    for example the buret calibration graph in the Calibrating Volumetric Glassware experiment from the Quantitative Chemical Analysis textbook by Daniel C. Harris.
  - Students should work together in groups to ensure they are accountable to understand each part.
  - Encourage students to share ideas but code/answer questions in their own copy of the notebook.
  - Remind students to save their own copy before they begin work.
  - Some students may have several Google accounts; remind them to be aware of which account is logged in when they save.
  - If you do not have a full hour available in lab, consider omitting Part 4.
  - In Task 4, glassware tolerance tables are displayed as drop-down widgets.  These are not printable.  
    If you need students to generate printable tables, consider using formatted print statments or Pandas dataframes.
  
  Timing notes:
  - Task 1 typically takes students 10-15 minutes when sample code is provided.  Add 5 minutes if prompting students to copy Numpy syntax from Basic Tasks.
  - Task 2 typically takes students 5-10 minutes.  Show students how to save and print the graph to tape into their lab notebook.
  - Task 3 typically takes students 10-15 minutes when sample code is provided.  Add 5 minutes if prompting students to copy Numpy syntax from Basic Tasks.
  - Task 4 typically takes students 5-10 minutes.  Consider omitting Task 4 if time is tight.
  
  Common student questions:
  - Students may ask if they need to tape the graph into their laboratory notebook before turning it in.
  - Students may ask if they need to print the glassware tolerance widgets; this is not feasible.

# Related lessons that complement this one
related_modules:
  - "moralech-umu-basic-tasks"
  - "statistical-testing-beta" 
  - "solution-preparation-spectrophotometry"
  - "standard-addition-spectophotometry"
  - "ocean-acidification"
  - "buffer-solutions"
  - "hplc-analysis"
  - "gc-ms-internal-standard"

# REPOSITORY URLS (REQUIRED)
# Link to the repository containing your public material
public_repo_url: "https://github.com/act-cms/moralech-umu-public-calibration-of-glassware"

# MATERIALS SECTION (REQUIRED)
# List each notebook/material in logical order
materials:
  - title: "Calibration of Glassware"
    description: "Generate code in Python to perform four tasks: Entering and processing data as an array; Creating a publication-quality graph; Reporting results to correct significant figures; Creating and using a lookup table widget."
    type: "notebook"  # Usually "notebook", could be "slides", "dataset", etc.
    duration: "1 hour"
    
    # REQUIRED: Include at least one URL (preferably both)
    # Direct link to notebook file on GitHub
    github_url: "https://github.com/act-cms/moralech-umu-public-calibration-of-glassware/blob/main/Calibration_of_Glassware_Student_Version.ipynb"
    # Google Colab launch link (recommended for accessibility)
    colab_url: "https://colab.research.google.com/github/act-cms/moralech-umu-public-calibration-of-glassware/blob/main/Calibration_of_Glassware_Student_Version.ipynb"
    
    # Learning objectives specific to this material
    objectives:
      - "Content: Use a water density table to convert between mass and volume"
      - "Content: Use tolerance data to understand the range of random error"
      - "Content: Use calibration data to correct for systematic error"
      - "Process: Use Python code to enter data into arrays"
      - "Process: Use Python code to perform array calculations"
      - "Process: Use Python code to display data in graphs or drop-down menus"
  

# LEARNING OBJECTIVES (REQUIRED)
# What molecular science concepts will students learn?
scientific_objectives:
  - "Use a water density table to convert between mass and volume"
  - "Use tolerance data to understand the range of random error"
  - "Use calibration data to correct for systematic error"

# What computational/programming skills will students develop?
cyberinfrastructure_objectives:
  - "Use Python code to enter data into arrays"
  - "Use Python code to perform array calculations"
  - "Use Python code to display data in graphs or drop-down menus"

# PREREQUISITES (REQUIRED)
# What science background do students need?
scientific_prerequisites:
  - "Types of Glassware"
  - "Types and Sources of Error"

# What programming experience is assumed?
programming_prerequisites:
  - "No prior programming experience required"
  # OR: eg "Basic Python syntax (variables, loops, functions)"

# PLATFORM SUPPORT (REQUIRED)
# List platforms where your materials can be used.
platforms:
  - "Google Colab"
  - "Local Installation"
  - "ChemCompute"

# Which platform do you recommend for most users?
recommended_platform: "Google Colab"

# METADATA (REQUIRED)
# Tags help with searching - use relevant keywords
tags:
  - "python"
  - "analytical-chemistry"
  - "laboratory"
  - "data-analysis"  # Use appropriate scientific area tags
  
