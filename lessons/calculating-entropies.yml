# lessons/your-lesson-name.yml
# 
# STARTER TEMPLATE FOR ACT-CMS LESSON PORTAL SUBMISSION
# Replace all placeholder text with your actual lesson information
# Remove any sections that don't apply to your lesson

# BASIC METADATA (REQUIRED)
# Use a clear, descriptive title that includes the main topic
title: "How can we calculate the entropy of substances?"

# Brief description for search results (1-2 sentences)
description: "In two guided-inquiry Jupyter notebooks, students fit experimental Cp data to calculate third law entropies."

# Longer description for the lesson page (use | for multi-line text)
expanded_description: |
  In two guided-inquiry Jupyter notebook activities, students import experimental isobaric heat capacity data, fit the data to a polynomial, and calculate the third law entropy of several substances. The introductory notebook focuses on calculating the entropy of a substance in the solid phase. The second notebook introduces entropy calculations with phase changes and the Debye extrapolation.

  The activities were designed using a guided-inquiry framework and targeted for undergraduate physical chemistry course. Students have a basic understanding of using Jupyter notebooks and importing well-formed CSV files for plotting with matplotlib. Parts of the activities are worked individually, but there are frequent prompts to reflect upon or compare results with 2-3 group members.

# COURSE INFORMATION (REQUIRED)
# Choose ONE: "None", "Beginner", "Intermediate", "Advanced"
programming_skill: "Beginner"
# None: No programming experience. 
# Beginner: Knows variables, conditionals, loops
# Intermediate: Can write their own scripts from scratch
# Advanced: Can write/develop software.

# Examples: "Foundational Module", "Physical Chemistry", "Organic Chemistry", 
# "Inorganic Chemistry", "Analytical Chemistry", "Biochemistry", "Materials Science", "Other"
primary_course: "Physical Chemistry"

# List other courses where this lesson could be used (optional)
also_for:
  - "Physical Chemistry"
  - "Materials Science"

# List all authors
authors: 
  - "Prof. Steve Singleton"

# Estimated total time for all materials
estimated_time: "2-3 hours for each notebook"

# Write a description of your module.
# Single notebook, multi-part module, etc?
format: "Multi-Part Materials Module"

# INSTRUCTOR INFORMATION (OPTIONAL)
# Contact email for instructor access requests (optional - will use default if not specified)
instructor_email: "ssinglet@coe.edu"
# Note: Instructor materials will be located at: instructor-repo/{lesson-filename}/
# where {lesson-filename} matches this YAML file's name

# INSTRUCTOR DETAILS (OPTIONAL)
# What level of students was this piloted with?
student_level: "Undergraduate"  # e.g., "Graduate", "Undergraduate - First Year", "Mixed Graduate/Undergraduate"
# How many students has this been tested with?
students_piloted: 15  # Number of students
# Free-form notes for instructors
instructor_notes: |

  These activities have been used in a Physical Chemistry I course with 5-15 students in a 3-hr laboratory period, 2-3 students per group. Students have had basic instruction on python/Jupyter and are comfortable using spreadsheets, but have had no formal instruction on programming. Students have been introduced to the 1st, 2nd, and 3rd laws of thermodynamics through POGIL exercises. They were familiar with mathematical relationships, but had not applied them to real systems.

  Timing notes: Each activity takes 2-3 hrs to complete. However, the notebooks have natural break points to accommodate time constraints. For example, in "How to calculate entropy of a substance", a convenient stopping point would be after the fit equation is integrated, but before starting the Debye extrapolation.


# REPOSITORY URLS (REQUIRED)
# Link to the repository containing your public material
public_repo_url: "https://github.com/act-cms/calculating-entropies"

# MATERIALS SECTION (REQUIRED)
# List each notebook/material in logical order
materials:
  - title: "Part 1: How can we calculate the entropy of a solid?"
    description: "Calculating the entropy of a solid from experimental Cp data"
    type: "notebook"  # Usually "notebook", could be "slides", "dataset", etc.
    duration: "2-3 hours"
    
    # REQUIRED: Include at least one URL (preferably both)
    # Direct link to notebook file on GitHub
    github_url: "https://github.com/act-cms/calculating-entropies/blob/main/01-entropy-single-phase/calculating-entropyorg.ipynb"
    # Google Colab launch link (recommended for accessibility)
    colab_url: "https://colab.research.google.com/github/act-cms/calculating-entropies/blob/main/01-entropy-single-phase/calculating-entropyorg.ipynb"
    
    # Learning objectives specific to this material
    objectives:
      - apply the first and second laws of thermodynamics for calculating the entropy of a substance in a single phase
      - relate heat capacity to entropy mathematically
      - predict the effect of structure on the entropy of a substance
  
  # Add more materials as needed
  - title: "Part 2: Calculating entropy with phase changes"
    description: "Calculating the molar entropy of a substance over a temperature range that spans phase changes"
    type: "notebook"
    duration: "2 hrs"
    github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/entropySO2.ipynb"
    #colab_url: ""
    objectives:
      - "Application of concepts from Part 1"
      - "Apply the third law of thermodynamics"
      - "Calculate S for warming a substance in different phases"
      - "Calculate S for phase transitions"

# LEARNING OBJECTIVES (REQUIRED)
# What molecular science concepts will students learn?
scientific_objectives:
  - "Apply the first and second laws of thermodynamics for calculating the entropy of a substance"
  - "Relate heat capacity to entropy mathematically"
  - "Predict the effect of structure on the entropy of a substance"

# What computational/programming skills will students develop?
cyberinfrastructure_objectives:
  - "Write and execute Python code in Jupyter notebooks"
  - "Import and visualize structured data using numpy and matplotlib"
  - "Fit experimental values to a polynomial"
  - "Numerical integration using trapezoid or Simpson"
  - "Assess the quality of fit using statistical measures RSS or SSE"

# PREREQUISITES (REQUIRED)
# What science background do students need?
scientific_prerequisites:
  - "Recognize differential relationships for Cp and S from the first and second laws of thermodynamics"
  - "Recognize that heat capacity is temperature dependent"

# What programming experience is assumed?
programming_prerequisites:
  - "Importing well-formed CSV files using read_csv()"
  - "Basic plotting using matplotlib"
  - "Creating and manipulating numpy arrays"
  - "Calling library functions"

# PLATFORM SUPPORT (REQUIRED)
# List platforms where your materials can be used.
platforms:
  - "Local Installation"
  - "CoCalc"
  - "ChemCompute"
  - "Google Colab"

# Which platform do you recommend for most users?
recommended_platform: "CoCalc"

# METADATA (REQUIRED)
# Tags help with searching - use relevant keywords
tags:
  - "python"
  - "jupyter"
  - "thermodynamics"
  - "entropy"
  - "undergraduate physical chemistry"
  - "curve fitting"
  - "inquiry learning"
  - "group learning"
